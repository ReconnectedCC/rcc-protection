plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	maven {
		name = "Flemmli97"
		url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
	}
	mavenLocal {
		content {
			includeModule("io.sc3", "sc-library")
			includeModule("io.sc3", "sc-peripherals")
		}
	}

	maven {
		url = uri("https://repo.lem.sh/releases")
		content {
			includeGroup("io.sc3")
		}
	}

	maven {
		name = "squiddev"
		url "https://maven.squiddev.cc"
		content {
			includeGroup("cc.tweaked")
			includeModule("org.squiddev", "Cobalt")
		}
	}

	maven {
		name = "shedaniel"
		url "https://maven.shedaniel.me"
		// cloth-config
		content {
			includeGroup("me.shedaniel.cloth")
			includeGroup("me.shedaniel.cloth.api")
		}
	}

	maven {
		name = "terraformersmc"
		url "https://maven.terraformersmc.com"
		// Trinkets, mod-menu
		content {
			includeModule("dev.emi", "trinkets")
			includeGroup("com.terraformersmc")
		}
	}

	maven {
		name = "ladysnake"
		url = "https://maven.ladysnake.org/releases"
		// Cardinal Components API (dependency of Trinkets)
		content {
			includeGroup("dev.onyxstudios.cardinal-components-api")
		}
	}

	maven {
		name = "sonatype"
		url "https://oss.sonatype.org/content/repositories/snapshots"
		// fabric-permissions-api (dependency of sc-goodies)
		content {
			includeModule("me.lucko", "fabric-permissions-api")
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modCompileOnly("io.github.flemmli97:flan:${flan_mcversion}-${flan_version}-fabric:api") {
		transitive = false //Remove this if you want to have all those optional dependencies
	}
	modRuntimeOnly("io.github.flemmli97:flan:${flan_mcversion}-${flan_version}-fabric") {
		transitive = false //Remove this if you want to have all those optional dependencies
	}
	modImplementation("io.sc3:Plethora-Fabric:1.12.0")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}